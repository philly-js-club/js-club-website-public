{
  "version": 3,
  "sources": ["../../../app/components/AdLogo.tsx", "../../../app/routes/ad.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/AdLogo.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/AdLogo.tsx\");\n  import.meta.hot.lastModified = \"1695172876206.7075\";\n}\n// REMIX HMR END\n\nexport function AdLogo({\n  className\n}) {\n  return <svg aria-label=\"PhillyJS Logo\" className={className} fill=\"none\" height=\"1000\" viewBox=\"0 0 1000 1000\" width=\"1000\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<g>\n\t\t\t\t<path d=\"M1000 0H0V1000H1000V0Z\" fill=\"var(--color-background)\" />\n\t\t\t\t<path d=\"M822 868H902.4V434.8H822V868Z\" fill=\"var(--color-foreground)\" />\n\t\t\t\t<path d=\"M546.22 869H627.22V732.2C627.22 699.8 646.42 681.8 678.82 681.8C707.62 681.8 721.42 698 721.42 726.8V869H802.42V721.4C802.42 648.8 762.22 608 706.42 608C671.02 608 642.82 624.2 627.22 653.6V435.8H546.22V869Z\" fill=\"var(--color-foreground)\" />\n\t\t\t\t<path d=\"M234.85 868H318.85V775H347.65C461.05 775 530.05 716.2 530.05 617.8C530.05 519.4 461.65 460 347.65 460H234.85V868ZM318.85 701.2V533.8H345.25C412.45 533.8 443.65 561.4 443.65 617.8C443.65 673.6 413.65 701.2 345.25 701.2H318.85Z\" fill=\"var(--color-foreground)\" />\n\t\t\t</g>\n\t\t</svg>;\n}\n_c = AdLogo;\nvar _c;\n$RefreshReg$(_c, \"AdLogo\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/ad.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/ad.tsx\");\n  import.meta.hot.lastModified = \"1695172876206.7075\";\n}\n// REMIX HMR END\n\nimport { useSearchParams } from \"@remix-run/react\";\nimport { AdLogo } from \"~/components/AdLogo\";\nimport { site } from \"~/config\";\nimport { constructSiteTitle, upperFirst } from \"~/utils/common\";\nexport const meta = ({\n  location\n}) => {\n  const params = new URLSearchParams(location.search);\n  const {\n    month,\n    year\n  } = getMonthAndYear(params);\n  let pageTitle = \"Ad\";\n  if (!isValidMonth(month) || !isValidYear(year)) {\n    return [{\n      title: constructSiteTitle(pageTitle)\n    }];\n  }\n  pageTitle = `Ad (${upperFirst(month)} ${year})`;\n  return [{\n    title: constructSiteTitle(pageTitle)\n  }];\n};\nexport default function Ad() {\n  _s();\n  const [params] = useSearchParams();\n  const {\n    month,\n    year\n  } = getMonthAndYear(params);\n  if (!isValidMonth(month)) {\n    return \"nope (month)\";\n  }\n  if (!isValidYear(year)) {\n    return \"nope (year)\";\n  }\n  return <main className=\"ad-main\">\n\t\t\t<div className=\"ad-img-area\">\n\t\t\t\t<AdLogo className=\"ad-img\" />\n\t\t\t</div>\n\t\t\t<div className=\"ad-text\">\n\t\t\t\t<h1>{site.title}</h1>\n\t\t\t\t<p>\n\t\t\t\t\t{upperFirst(month)} {year}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</main>;\n}\n_s(Ad, \"KB+Sx1GyQK5Z7eQYQPoF2V7J20Y=\", false, function () {\n  return [useSearchParams];\n});\n_c = Ad;\nfunction getMonthAndYear(params) {\n  const month = params.get(\"month\")?.toLowerCase() ?? \"idk\";\n  const year = params.get(\"year\")?.toLowerCase() ?? \"when\";\n  return {\n    month,\n    year\n  };\n}\nfunction isValidMonth(month) {\n  const monthNames = new Set([\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"]);\n  return monthNames.has(month);\n}\nfunction isValidYear(year) {\n  return /\\d{4}/.test(year);\n}\nvar _c;\n$RefreshReg$(_c, \"Ad\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c"]
}
