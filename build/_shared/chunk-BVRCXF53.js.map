{
  "version": 3,
  "sources": ["empty-module:@remix-run/node", "../../../app/components/EventDetails.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/EventDetails.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/EventDetails.tsx\");\n  import.meta.hot.lastModified = \"1703604141330.4973\";\n}\n// REMIX HMR END\n\nimport { Arrow } from \"~/components/Arrow\";\nimport { region } from \"~/config\";\nexport function EventDetails({\n  date,\n  link,\n  location,\n  linkText,\n  topics,\n  weight = \"light\"\n}) {\n  const formatter = new Intl.DateTimeFormat(region.locale, {\n    timeZone: region.timeZone,\n    day: \"numeric\",\n    month: \"long\"\n  });\n  return <article className={`event-details medium event-details-${weight}`}>\n\t\t\t<h3 className=\"event-details-date\">{formatter.format(date)}</h3>\n\t\t\t<p>{location}</p>\n\t\t\t<ul className=\"event-details-topics\">\n\t\t\t\t{topics.map(topic => <li className=\"event-details-topic\" key={topic}>\n\t\t\t\t\t\t{topic}\n\t\t\t\t\t</li>)}\n\t\t\t</ul>\n\t\t\t<a href={link} rel=\"noreferrer\" target=\"_blank\">\n\t\t\t\t{linkText}\n\t\t\t\t<Arrow className=\"arrow-out\" label=\"External link indication arrow\" rotate={-45} />\n\t\t\t</a>\n\t\t</article>;\n}\n_c = EventDetails;\nvar _c;\n$RefreshReg$(_c, \"EventDetails\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACoCf;AAnCH,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sCAAwC,EAAE;AAAA,EACnF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAiC;AACjC,cAAY,IAAI,eAAe;AACjC;AAKO,SAAS,aAAa;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS;AACX,GAAG;AACD,QAAM,YAAY,IAAI,KAAK,eAAe,OAAO,QAAQ;AAAA,IACvD,UAAU,OAAO;AAAA,IACjB,KAAK;AAAA,IACL,OAAO;AAAA,EACT,CAAC;AACD,SAAO,mDAAC,aAAQ,WAAW,sCAAsC,UAChE;AAAA,uDAAC,QAAG,WAAU,sBAAsB,oBAAU,OAAO,IAAI,KAAzD;AAAA;AAAA;AAAA;AAAA,WAA2D;AAAA,IAC3D,mDAAC,OAAG,sBAAJ;AAAA;AAAA;AAAA;AAAA,WAAa;AAAA,IACb,mDAAC,QAAG,WAAU,wBACZ,iBAAO,IAAI,WAAS,mDAAC,QAAG,WAAU,uBAChC,mBAD2D,OAAzC;AAAA;AAAA;AAAA;AAAA,WAEpB,CAAK,KAHP;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA,mDAAC,OAAE,MAAM,MAAM,KAAI,cAAa,QAAO,UACrC;AAAA;AAAA,MACD,mDAAC,SAAM,WAAU,aAAY,OAAM,kCAAiC,QAAQ,OAA5E;AAAA;AAAA;AAAA;AAAA,aAAiF;AAAA,SAFlF;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,OAXM;AAAA;AAAA;AAAA;AAAA,SAYP;AACF;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
